import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { copyFileSync, mkdirSync } from "fs";
import { join, dirname } from "path";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod,
});

function copyWasmFile() {
	try {
		const sourceFile = join("node_modules", "sql.js", "dist", "sql-wasm.wasm");
		const destFile = join("dist", "sql-wasm.wasm");

		mkdirSync(dirname(destFile), { recursive: true });

		copyFileSync(sourceFile, destFile);
		console.log("âœ“ Copied sql-wasm.wasm to dist/");
	} catch (error) {
		console.error("Failed to copy WASM file:", error.message);
	}
}

if (prod) {
	await context.rebuild();
	copyWasmFile();
	process.exit(0);
} else {
	await context.watch();
	copyWasmFile();
}
